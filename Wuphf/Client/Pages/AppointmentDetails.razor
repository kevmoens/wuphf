@page "/AppointmentDetails"
@inject HttpClient Http
@using Wuphf.Shared.Appointments

@if (details != null)
{
<div class="container">
    <div><h2>Task</h2></div>
    <div><h2>Time</h2></div>
    <div><h2>Complete</h2></div>
    <div><h2>Delay</h2></div>
    @foreach (var dtl in details)
    {
        <div><h2>@dtl.Appointment?.Description</h2></div>
        <div> <h2>@dtl.SchedDateTime.ToShortDateString() @dtl.SchedDateTime.ToShortTimeString() </h2></div>
        <div> <MudFab Color="Color.Primary" StartIcon="@Icons.Filled.Done" @onclick="() => {OnDetailsCompleted(dtl); }" /> </div>
        <div> <MudFab Color="Color.Primary" StartIcon="@Icons.Filled.WatchLater" @onclick="() => {OnDetailsDelay(dtl); }" /> </div>

    }
</div>

}
@code {
    private List<AppointmentDetail> details;
    protected async override Task OnInitializedAsync()
    {
        var dtls = await Http.GetFromJsonAsync<AppointmentDetail[]>($"AppointmentDetail/{DateTime.Now.ToString("s")}");
        this.details = dtls.ToList();
        StateHasChanged();
    }
    public async void OnDetailsCompleted(AppointmentDetail dtl)
    {
        dtl.CompletionDateTime = DateTime.Now;
        details.Remove(dtl);
        await Http.PostAsJsonAsync<AppointmentDetail>("AppointmentDetail", dtl);
        StateHasChanged();
    }
    public async void OnDetailsDelay(AppointmentDetail dtl)
    {
        await Http.PostAsJsonAsync<AppointmentDetail>("AppointmentDetail/Delay", dtl);
        var dtls = await Http.GetFromJsonAsync<AppointmentDetail[]>($"AppointmentDetail/{DateTime.Now.ToString("s")}");
        this.details = dtls.ToList();
        StateHasChanged();
    }
}
