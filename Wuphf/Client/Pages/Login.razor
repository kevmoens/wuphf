@page "/login"
@using Wuphf.Shared
@using Wuphf.Shared.Session
@using Wuphf.Client.Models.Session
@using Wuphf.Client.Models.Dialog
@inject NavigationManager navigationManager
@inject HttpClient Http
@inject Session session

<div class="container">
    <div class="centered-username">

        <input placeholder="username" type="text" @bind-value="username" @onkeyup="Enter">
    </div>
    <div class="centered-password">
        <input placeholder="password" type="password" @bind-value="password" @onkeyup="Enter" >
    </div>
    <div class="centered-create">
        <button type="button" class="btn btn-outline-primary btn-border centered-create" @onclick="OnLogin">Login</button>
    </div>
    <div>
        <button type="button" class="btn btn-outline-danger btn-border" @onclick="OnGoBack">Go back</button>
    </div>
</div>





@code {
    private string username;
    private string password;
    public async Task OnLogin()
    {
        if (string.IsNullOrEmpty(username) || string.IsNullOrEmpty(password))
        {
            await MsgBox.Show("Username and Password are required.", "Wuphf Error", DialogButtons.OK);
            return;
        }

        var login = new LoginRequest() { UserName = username, Password = password };
        var result = await Http.PostAsJsonAsync<LoginRequest>($"Account/{username}", login);
        if (!result.IsSuccessStatusCode)
        {
            System.Diagnostics.Debug.Print(result.ReasonPhrase);
            return;
        }
        var content = await result.Content.ReadAsStringAsync();
        Guid token = Guid.Empty;
        if (!string.IsNullOrEmpty(content) && !Guid.TryParse(content,out token))
        {
            await MsgBox.Show(content, "Wuphf Error", DialogButtons.OK);
            return;
        }
        session.UserName = username;
        session.Token = content;
        PubSub.Hub.Default.Publish<SessionStatusChangedEvent>(new SessionStatusChangedEvent() { Token = content });
        navigationManager.NavigateTo("Home");
    }
    public async void Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            await OnLogin();
        }
    }
    public void OnGoBack()
    {
        navigationManager.NavigateTo("");
    }
}
