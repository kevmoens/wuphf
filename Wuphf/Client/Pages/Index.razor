@page "/"
@using Wuphf.Client.Models.Session
@using Wuphf.Shared.Session
@inject NavigationManager navigationManager
@inject Session session 
<style>
    .container {
        display: grid;
        grid-template-columns: 20% 15% 136px 15% 20%;
        grid-template-rows: 200px 130px 240px;
    }

    .phone {
        justify-items: left;
        width: 200px;
        height: 150px;
    }

    .welcome {
        margin-top: 75px;
        grid-column-start: 3;
    }

    .AccountContainer {
        display: grid;
        grid-column-start: 3;
        grid-row-start: 2;
        grid-template-columns: 1fr;
        grid-template-rows: 1fr 1fr 1fr;
        justify-items: center;
    }

    .container button {
        width: 100%;
    }

    .laptopCell {
        grid-column-start: 5;
        grid-row-start: 2;
    }

    .laptop {
        margin-left: -50px;
        width: 240px;
        height: 240px;
    }

    .tabletCell {
        grid-column-start: 1;
        grid-row-start: 3;
    }

    .tablet {
        width: 240px;
        height: 240px;
    }

    .btn-login {
        width: auto;
    }
</style>
<div class="container">

    <div>
        <img class="phone" src="/images/phone.png" />
    </div>

    <div class="welcome">
        <center><h1>Welcome to Wuphf!</h1></center>
    </div>


    <div class="AccountContainer">
        <div></div>
        <div>
            <button class="btn btn-primary" @onclick="OnCreateAccount">Create Account</button>
        </div>
        <div>
            <button class="btn btn-primary btn-login" @onclick="OnLogin">Login</button>
        </div>
    </div>

    <div class="laptopCell">
        <img class="laptop" src="/images/laptop.png" />
    </div>
    <div class="tabletCell">
        <img class="tablet" src="/images/tablet.jpg" />
    </div>
</div>
@code{
    private bool IsLoggedIn;
    protected override void OnInitialized()
    {
        PubSub.Hub.Default.Subscribe<SessionStatusChangedEvent>(OnSessionStatusChanged);
        base.OnInitialized();
        if (!string.IsNullOrEmpty(session?.Token))
        {
            navigationManager.NavigateTo("home");
        }
    }
    public void OnCreateAccount()
    {
        navigationManager.NavigateTo("createaccount");
    }
    public void OnLogin()
    {
        navigationManager.NavigateTo("login");
    }
    public void OnSessionStatusChanged(SessionStatusChangedEvent sessionStatus)
    {
        IsLoggedIn = !string.IsNullOrEmpty(sessionStatus.Token);
        if (IsLoggedIn)
        {
            navigationManager.NavigateTo("home");
        }
    }
}